#!/bin/bash
#
# Comment, .env, file utils

#######################################
# translate text.
# Globals:
#   None
# Arguments:
#   text
# Outputs:
#   None
# Returns:
#   0 if , non-zero on error occured.
# Example:
#   search_for --engine YouTube --app "Microsoft Edge" python golang # => launch Microsoft Edge and search.
#   
#######################################
function search_for {

  local i
  local app
  local new_array=( $@ )
  for ((i=0;i<$#;i++)); do
    # if find --app flag from args, open 
    # bashの正規表現で書けるかも
    if [ "${new_array[$i]}" = "--app" ]; then
      app="${new_array[$(($i + 1))]}"
      unset new_array[$i] new_array[$(($i + 1))]
      # if value Microsoft or Google, split whitespace when param.
      if [ "${app}" = "Microsoft" ] || [ "${app}" = "Google" ]; then
        app="${app} ${new_array[$(($i + 2))]}"
        unset new_array[$(($i + 2))]
      fi
    fi
  done
  # reindex assign.
  new_array=${new_array[@]}

  if [ -z "${app}" ]; then
    app="Google Chrome"
  fi
  open -a "${app}" $(search_url $new_array)
}

function main {

  local i
  local new_array=( $@ )
  for ((i=0;i<$#;i++)); do
    # if find --debug flag from args, start debug mode.
    if [ "${new_array[$i]}" = "--debug" ]; then
      set -x
      trap "
        set +x
        trap - RETURN
      " RETURN
      unset new_array[$i]
    fi
  done
  # reindex assign.
  new_array=${new_array[@]}

  search_for $new_array
}

main $@
# と指定できるようにする。
# --engine jjj
