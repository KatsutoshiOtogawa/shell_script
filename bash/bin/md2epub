#!/bin/bash
#
# gnu command util.

#######################################
# write stderr syntax. google style(https://google.github.io/styleguide/shellguide.html)
# Globals:
#   LOGFORMAT
# Arguments:
#   All.
# Outputs:
#   format 
# Returns:
#   0 if thing was set alias, non-zero on error.
# Example:
#   url_encode "Unable to do_something"  # => you use use sed
#######################################
function md2epub() {

        #   'pandoc','-f','markdown'
        # ,'-t', 'epub3'
        # ,path.join(self.setting.target, self.setting.manuscript)
        # ,path.join(self.setting.target, self.setting.title)
        # ,'-o', path.join(self.setting.target, self.setting.out)
        # ,'--css', path.join(self.setting.target, self.setting.css)
        # ,'--toc', '--toc-depth=2'
        # ,'--epub-cover-image={}'.format(path.join(self.setting.target, self.setting.cover_image))

  local i
  local title
  local css
  local new_array=( $@ )
  for ((i=0;i<$#;i++)); do
    if [ "${new_array[$i]}" = "--title" ]; then
      title=${new_array[$(($i+1))]}
      # if next index start '-', this value is option.
      if echo $title | grep ^- > /dev/null; then
        echo "set title txt!" >&2
        return 1
      fi
      unset new_array[$i] new_array[$(($i + 1))]
    fi
    if [ "${new_array[$i]}" = "--css" ]; then
      css=${new_array[$(($i+1))]}
      # if next index start '-', this value is option.
      if echo $css | grep ^- > /dev/null; then
        echo "set css!" >&2
        return 1
      fi
      unset new_array[$i] new_array[$(($i + 1))]
    fi
    if [ "${new_array[$i]}" = "--cover" ]; then
      cover=${new_array[$(($i+1))]}
      # if next index start '-', this value is option.
      if echo $cover | grep ^- > /dev/null; then
        echo "set cover!" >&2
        return 1
      fi
      unset new_array[$i] new_array[$(($i + 1))]
    fi
  done

  local manuscript=${new_array[@]}
  # --title
  # title.txt
  
  local out=${manuscript//\.md/\.epub}
  # --css
  # cover.jpg
  pandoc -f markdown \
    -t epub3 \
    $manuscript \
    $title \
    -o $out \
    --css $css \
    --toc --toc-depth=2 \
    --epub-cover-image=$cover
}

function main {

  local i
  local new_array=( $@ )
  for ((i=0;i<$#;i++)); do
    # if find --debug flag from args, start debug mode.
    if [ "${new_array[$i]}" = "--debug" ]; then
      set -x
      trap "
        set +x
        trap - RETURN
      " RETURN
      unset new_array[$i]
    fi
  done
  # reindex assign.
  new_array=${new_array[@]}

  url_encode $new_array
}

main $@
